chisq.test
?chisq.test
x <- readRDS(url("https://github.com/datasciencelabs/2022/blob/master/data/digits_st.RDS"))
# sample a few* letters many times:
n <- 10000
# * "a few" ~ Pois(2)
ntimes <- rpois(n, lambda = 2)
n <- 50
# * "a few" ~ Pois(2)
ntimes <- rpois(n, lambda = 2)
ntimes
sampfun <- function(t){
sample(letters, t)
}
letters
sampfun(n)
sampfun(ntimes)
ntimes
Vectorize(sampfun)
sampfun <- function(t){
sample(letters, t)
}
Vectorize(sampfun)
?Vectorize
vsampfun <- Vectorize(sampfun)
vsample <- Vectorize(sample, vectorize.args = "size")
vsample
require(microbenchmark)
microbenchmark({
s1 <- sapply(ntimes, sampfun)
})
microbenchmark({
s2 <- vsampfun(ntimes)
})
microbenchmark({
s3 <- vsample(letters, ntimes)
})
microbenchmark({
s4 <- purrr::map(ntimes, sampfun)
})
s1
x <- data.frame(ntimes = rpois(n, lambda = 2), s = NA)
x <- data.frame(ntimes = rpois(n, lambda = 2))
x |> mutate(s = paste0(sample(letters, ntimes), collapse = ""))
library(dplyr)
x <- data.frame(ntimes = rpois(n, lambda = 2))
x |> mutate(s = paste0(sample(letters, ntimes), collapse = ""))
x |> mutate(s = paste0(sample(ntimes, letters), collapse = ""))
x <- data.frame(ntimes = rpois(n, lambda = 2))
head(x)
?sample
paste0(sample(letters, ntimes), collapse = "")
paste0(sample(letters, ntimes[i]), collapse = "")
paste0(sample(letters, ntimes[1]), collapse = "")
?mapply(function, ...)
?mapply
?purrr::map(ntimes, sampfun)
s1
sampfun2 <- function(t){
paste0(sample(letters, t), collapse = "")
}
vsampfun2 <- Vectorize(sampfun2)
x |> mutate(s = vsampfun2(ntimes))
s5 <- vsampfun2(ntimes)
s5
microbenchmark({
s5 <- vsampfun2(ntimes)
})
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
times = 1000
)
mbm
# sample a few* letters many times:
n <- 10000
# * "a few" ~ Pois(2)
ntimes <- rpois(n, lambda = 2)
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
times = 10000
)
mbm
purr::map(ntimes, sampfun2)
purrr::map(ntimes, sampfun2)
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
s6 = as.data.frame(ntimes) |> mutate(s = purrr::map(ntimes, sampfun2))
times = 1000
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
s6 = as.data.frame(ntimes) %>% mutate(s = purrr::map(ntimes, sampfun2))
times = 1000
as.data.frame(ntimes)
sampfun2 <- function(t){
paste0(sample(letters, t), collapse = "")
}
as.data.frame(ntimes) %>% mutate(s = map(ntimes, sampfun2))
library(purrr)
as.data.frame(ntimes) %>% mutate(s = map(ntimes, sampfun2))
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
s6 = as.data.frame(ntimes) %>% mutate(s = map(ntimes, sampfun2))
times = 1000
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
s6 = as.data.frame(ntimes) %>% mutate(s = map(ntimes, sampfun2)),
times = 1000
)
# sample a few* letters many times:
n <- 1000
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
s6 = as.data.frame(ntimes) %>% mutate(s = map(ntimes, sampfun2)),
times = 1000
)
mbm <- microbenchmark(
s1 = sapply(ntimes, sampfun),
s2 = vsampfun(ntimes),
s3 = vsample(letters, ntimes),
s4 = purrr::map(ntimes, sampfun),
s5 = vsampfun2(ntimes),
s6 = as.data.frame(ntimes) %>% mutate(s = map(ntimes, sampfun2)),
times = 100
)
mbm
?microbenchmark
print(mbm)
log2(0.063131)
:Q!:q1
bundle exec jekyll build
install.packages("blogdown")
C:/Users/jflun/Dropbox/github_webpage/_posts/posts.htmlblogdown::serve_site()
blogdown::serve_site()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
install.packages("rstudioapi")
